@model AddPaymentViewModel

@{
    ViewData["Title"] = "New Payment";
    
    var totalPaid = Model.Appointment.Payments.Sum(x => x.AmountPaid);

    var balance = Model.Appointment.PriceQuoted - totalPaid;
    var currentUser = "";//TODO: Implement this
}
<h1>New Payment</h1>

<div class="box">
    <div class="row">
        <div class="col-sm-12">
            <p>
                <b>£@totalPaid</b> paid of <b>£@Model.Appointment.PriceQuoted</b> with <b>£@balance</b> left to pay
            </p>
        </div>
    </div>
</div>
<div class="box">
    <div class="row">
        <div class="col-sm-12">
            <form method="post">
                <input type="hidden" name="AppointmentId" value="@Model.Appointment.Id" />
                <input type="hidden" name="TakenBy" value="@currentUser" />

                <div class="form-group">
                    <label>Amount Paid</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text">£</span>
                        </div>
                        <input class="form-control" name="AmountPaid" id="AmountPaid" />
                    </div>
                </div>
                <div class="form-group">
                    <label>Payment Method</label>
                    <select class="form-control" name="PaymentMethod">
                        @foreach (var method in (PaymentMethod[])Enum.GetValues(typeof(PaymentMethod)))
                        {
                            <option value="@((int)method)">@method</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label>Payment Type</label>
                    @if (Model.IsDeposit)
                    {
                        <input class="form-control" readonly name="PaymentType" value="Deposit" />
                    }
                    else
                    {
                        <select class="form-control" name="PaymentType">
                            @foreach (var paymentType in (PaymentType[])Enum.GetValues(typeof(PaymentType)))
                            {
                                <option value="@((int)paymentType)">@paymentType.GetDisplayName()</option>
                            }
                        </select>
                    }
                </div>
                <button class="btn btn-lg btn-block btn-success">Save</button>
            </form>
        </div>
    </div>
</div>